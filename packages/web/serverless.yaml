service:
  name: rent-a-cat-web

plugins:
  - serverless-s3-sync
  - serverless-scriptable-plugin

provider:
  name: aws
  stage: dev
  region: us-east-1
  tags:
    Rent-A-Cat: Web-${opt:stage, self:provider.stage}
  stackTags:
    Rent-A-Cat: Web-${opt:stage, self:provider.stage}

custom:
  scriptHooks:
  # before:package:createDeploymentArtifacts: yarn build
  s3Sync:
    - bucketName: rent-a-cat-website-${opt:stage, self:provider.stage}
      localDir: dist
      # params:
      #   - index.html:
      #       CacheControl: 'no-cache'
      #   - 'js/*':
      #       CacheControl: 'public, max-age=31536000'
      #   - 'css/*':
      #       CacheControl: 'public, max-age=31536000'

resources:
  Resources:
    RentACatWebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: rent-a-cat-website-${opt:stage, self:provider.stage}
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: RentACatWebsiteBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal: '*'
              Action:
                - 's3:GetObject'
              Resource:
                Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: RentACatWebsiteBucket
                    - '/*'
  Outputs:
    RentACatWebsiteBucketName:
      Value:
        Ref: RentACatWebsiteBucket
    RentACatWebsiteURL:
      Value:
        Fn::GetAtt: [RentACatWebsiteBucket, WebsiteURL]